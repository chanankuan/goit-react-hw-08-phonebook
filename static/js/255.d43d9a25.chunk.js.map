{"version":3,"file":"static/js/255.d43d9a25.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","Pages/Register.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Flex,\n  Heading,\n  Input,\n  Button,\n  InputGroup,\n  Stack,\n  InputLeftElement,\n  chakra,\n  Box,\n  Avatar,\n  FormControl,\n  InputRightElement,\n} from '@chakra-ui/react';\nimport { FaUserAlt, FaLock, FaEnvelope } from 'react-icons/fa';\nimport { signup } from '../../redux/auth/operations';\n\nconst CFaUserAlt = chakra(FaUserAlt);\nconst CFaLock = chakra(FaLock);\nconst CFaEnvelope = chakra(FaEnvelope);\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const handleShowClick = () => setShowPassword(!showPassword);\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n    setFormData(prevFormData => ({ ...prevFormData, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(signup(formData));\n    setFormData({ name: '', email: '', password: '' });\n  };\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      width=\"100wh\"\n      height=\"100vh\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Stack\n        flexDir=\"column\"\n        mb=\"2\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Avatar bg=\"teal.500\" />\n        <Heading color=\"teal.400\">Welcome</Heading>\n        <Box minW={{ base: '90%', md: '468px' }}>\n          <form onSubmit={handleSubmit}>\n            <Stack\n              rounded={10}\n              spacing={4}\n              p=\"1rem\"\n              backgroundColor=\"whiteAlpha.900\"\n              boxShadow=\"md\"\n            >\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<CFaUserAlt color=\"gray.400\" />}\n                  />\n                  <Input\n                    name=\"name\"\n                    type=\"text\"\n                    color=\"#000\"\n                    placeholder=\"Name\"\n                    autoComplete=\"username\"\n                    onChange={handleChange}\n                  />\n                </InputGroup>\n              </FormControl>\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<CFaEnvelope color=\"gray.400\" />}\n                  />\n                  <Input\n                    name=\"email\"\n                    type=\"email\"\n                    color=\"#000\"\n                    placeholder=\"Email\"\n                    autoComplete=\"username\"\n                    onChange={handleChange}\n                  />\n                </InputGroup>\n              </FormControl>\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    color=\"gray.400\"\n                    children={<CFaLock color=\"gray.400\" />}\n                  />\n                  <Input\n                    name=\"password\"\n                    color=\"#000\"\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder=\"Password\"\n                    autoComplete=\"current-password\"\n                    onChange={handleChange}\n                  />\n                  <InputRightElement width=\"4.5rem\">\n                    <Button\n                      h=\"1.75rem\"\n                      backgroundColor=\"gray.200\"\n                      _hover={{ backgroundColor: 'gray.300' }}\n                      size=\"sm\"\n                      onClick={handleShowClick}\n                    >\n                      {showPassword ? 'Hide' : 'Show'}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              <Button\n                borderRadius={5}\n                type=\"submit\"\n                variant=\"solid\"\n                colorScheme=\"pink\"\n                width=\"full\"\n              >\n                Login\n              </Button>\n            </Stack>\n          </form>\n        </Box>\n      </Stack>\n      <Box>\n        Already have an account?{' '}\n        <Link\n          to=\"/login\"\n          style={{ textDecoration: 'underline', color: '#319795' }}\n        >\n          Sign In\n        </Link>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default App;\n","import RegisterForm from '../components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\n\nexport default Register;\n"],"names":["CFaUserAlt","chakra","FaUserAlt","CFaLock","FaLock","CFaEnvelope","FaEnvelope","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","name","email","password","_useState4","formData","setFormData","handleChange","e","_e$target","target","value","prevFormData","_objectSpread","_defineProperty","_jsxs","Flex","flexDirection","width","height","justifyContent","alignItems","children","Stack","flexDir","mb","_jsx","Avatar","bg","Heading","color","Box","minW","base","md","onSubmit","preventDefault","signup","rounded","spacing","p","backgroundColor","boxShadow","FormControl","InputGroup","InputLeftElement","pointerEvents","Input","type","placeholder","autoComplete","onChange","InputRightElement","Button","h","_hover","size","onClick","borderRadius","variant","colorScheme","Link","to","style","textDecoration","RegisterForm"],"sourceRoot":""}