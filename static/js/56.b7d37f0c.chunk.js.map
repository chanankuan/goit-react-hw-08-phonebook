{"version":3,"file":"static/js/56.b7d37f0c.chunk.js","mappings":"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","sources":["components/ContactsList/ContactsList.jsx","components/ContactForm/ContactForm.jsx","Pages/Contacts.jsx","components/Common.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport { BsPencilSquare } from 'react-icons/bs';\nimport {\n  Icon,\n  Grid,\n  GridItem,\n  Card,\n  Heading,\n  Text,\n  Button,\n} from '@chakra-ui/react';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <Grid gap={6}>\n      {filteredContacts.map(({ id, number, name }) => (\n        <GridItem w=\"100%\" key={id}>\n          <Card\n            backgroundColor=\"gray.100\"\n            padding=\"5px 10px\"\n            transition=\"transform 100ms ease-in-out\"\n            _hover={{ transform: 'scale(1.02)', boxShadow: '' }}\n          >\n            <Grid templateColumns=\"150px 1fr 40px 40px\" alignItems=\"center\">\n              <Heading size=\"md\">{name}</Heading>\n              <Text>{number}</Text>\n              <Button padding=\"5px\">\n                <DeleteIcon onClick={() => handleDelete(id)} />\n              </Button>\n              <Button padding=\"5px\">\n                <Icon as={BsPencilSquare} />\n              </Button>\n            </Grid>\n          </Card>\n        </GridItem>\n      ))}\n    </Grid>\n  );\n};\n\nexport default ContactsList;\n","import { forwardRef, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IMaskInput } from 'react-imask';\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from '@chakra-ui/react';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nconst NumberMask = forwardRef(function TextMaskCustom(props, ref) {\n  const { onChange, ...other } = props;\n  return (\n    <IMaskInput\n      {...other}\n      mask=\"(#00) 000-00-00\"\n      definitions={{\n        '#': /[0-9]/,\n      }}\n      inputRef={ref}\n      onAccept={value => onChange({ target: { name: props.name, value } })}\n      overwrite\n    />\n  );\n});\n\nconst ContactForm = ({ onClose, isOpen }) => {\n  const dispatch = useDispatch();\n  const initialRef = useRef(null);\n  const finalRef = useRef(null);\n  const [formData, setFormData] = useState({ name: '', number: '' });\n\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isExist = contacts.some(contact => {\n      return contact.name.toLowerCase() === formData.name.toLowerCase();\n    });\n\n    if (isExist) {\n      alert(`${formData.name} is already in contacts.`);\n      onClose();\n      setFormData({ name: '', number: '' });\n      return;\n    }\n\n    dispatch(addContact(formData));\n    onClose();\n    setFormData({ name: '', number: '' });\n  };\n\n  const handleChange = e => {\n    let { name, value } = e.target;\n\n    if (name === 'name') {\n      value = value.replace(/[^a-zA-Zа-яА-ЯіІʼ\\s-]/g, '');\n    }\n\n    setFormData(prevFormData => ({ ...prevFormData, [name]: value }));\n  };\n\n  return (\n    <Modal\n      isCentered\n      initialFocusRef={initialRef}\n      finalFocusRef={finalRef}\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader color=\"black\">Add new contact</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody pb={6}>\n          <FormControl>\n            <FormLabel color=\"black\">Full name</FormLabel>\n            <Input\n              ref={initialRef}\n              name=\"name\"\n              value={formData.name}\n              placeholder=\"Full name\"\n              color=\"black\"\n              onChange={handleChange}\n              isRequired={true}\n            />\n          </FormControl>\n\n          <FormControl mt={4}>\n            <FormLabel color=\"black\">Phone number</FormLabel>\n            <Input\n              name=\"number\"\n              value={formData.number}\n              placeholder=\"Number\"\n              color=\"black\"\n              onChange={handleChange}\n              as={NumberMask}\n              isRequired={true}\n            />\n          </FormControl>\n        </ModalBody>\n\n        <ModalFooter>\n          <Button colorScheme=\"pink\" mr={3} onClick={handleSubmit}>\n            Save\n          </Button>\n          <Button onClick={onClose}>Cancel</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default ContactForm;\n","import React, { useEffect } from 'react';\nimport { useDisclosure } from '@chakra-ui/react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AddIcon } from '@chakra-ui/icons';\nimport { Heading, Button } from '@chakra-ui/react';\nimport { selectContacts } from '../redux/contacts/selectors';\nimport { Container } from 'components/Common';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport ContactForm from 'components/ContactForm/ContactForm';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container style={{ paddingTop: 116 }}>\n      {contacts.length > 0 ? (\n        <ContactsList />\n      ) : (\n        <Heading as=\"h1\" size=\"lg\">\n          No contacts yet.\n        </Heading>\n      )}\n      <Button\n        height={50}\n        width={50}\n        rounded=\"50%\"\n        position=\"fixed\"\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        right={10}\n        bottom={10}\n        onClick={onOpen}\n      >\n        <AddIcon />\n      </Button>\n\n      <ContactForm onClose={onClose} isOpen={isOpen} />\n    </Container>\n  );\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 20px;\n  margin: 0 auto;\n  max-width: 768px;\n  /* @media screen and (min-width: 375px) {\n    max-width: 375px;\n  }\n  @media screen and (min-width: 768px) {\n    padding-left: 32px;\n    padding-right: 32px;\n    max-width: 768px;\n  }\n  @media screen and (min-width: 980px) {\n    max-width: 980px;\n  } */\n`;\n\nexport const Section = styled.section``;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: none;\n  outline: none;\n  padding: 0;\n`;\n\nexport const Player = styled.img`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Icon = styled.img``;\n"],"names":["dispatch","useDispatch","filteredContacts","useSelector","selectVisibleContacts","_jsx","Grid","gap","children","map","_ref","id","number","name","GridItem","w","Card","backgroundColor","padding","transition","_hover","transform","boxShadow","_jsxs","templateColumns","alignItems","Heading","size","Text","Button","DeleteIcon","onClick","contactId","deleteContact","Icon","as","BsPencilSquare","NumberMask","forwardRef","props","ref","onChange","other","_objectWithoutProperties","_excluded","IMaskInput","_objectSpread","mask","definitions","inputRef","onAccept","value","target","overwrite","onClose","isOpen","initialRef","useRef","finalRef","_useState","useState","_useState2","_slicedToArray","formData","setFormData","contacts","selectContacts","handleChange","e","_e$target","replace","prevFormData","_defineProperty","Modal","isCentered","initialFocusRef","finalFocusRef","ModalOverlay","ModalContent","ModalHeader","color","ModalCloseButton","ModalBody","pb","FormControl","FormLabel","Input","placeholder","isRequired","mt","ModalFooter","colorScheme","mr","preventDefault","some","contact","toLowerCase","alert","concat","addContact","_useDisclosure","useDisclosure","onOpen","useEffect","fetchContacts","Container","style","paddingTop","length","ContactsList","height","width","rounded","position","display","justifyContent","right","bottom","AddIcon","ContactForm","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5"],"sourceRoot":""}